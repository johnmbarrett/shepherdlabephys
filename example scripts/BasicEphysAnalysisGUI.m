classdef BasicEphysAnalysisGUI < handle
    properties(Constant=true)
        DataOptions = {                     ...
            'Raw Traces',                   ...
            'Baseline Subtracted Traces',   ...
            'Average Trace',                ...
            'Filtered Traces',              ...
            'Average Filtered Trace',       ...
            'Filtered Average Trace',       ...
            'Series Resistance',            ...
            'Input Resistance',             ...
            'Membrane Time Constant',       ...
            'Membrane Capacitance',         ...
            'Charge Transferred',           ...
            'Temporal Parameters',          ...
            };
    end
    
    properties(GetAccess=public,SetAccess=protected)
        Figure
        DataAxis
    end
    
    properties(Hidden=true)
        AllTraces
        TraceNames
        SelectedTraceIndices
    end
    
    properties
        SelectedTraces
        SelectedTraceNames
        Baseline
        BaselineSubtractedTraces
        AverageTrace
        FilteredTraces
        AverageFilteredTrace
        FilteredAverageTrace
        SeriesResistance
        InputResistance
        MembraneTimeConstant
        MembraneCapacitance
        SteadyStateCurrent
        ChargeTransferred
        Peaks
        PeakIndices
        Latencies
        RiseTimes
        FallTimes
        HalfWidths
        Peak10IndexRising
        Peak90IndexRising
        Peak90IndexFalling
        Peak10IndexFalling
        Peak50IndexRising
        Peak50IndexFalling
        SampleRate
        RecordingMode = 'IC'
        Filenames
    end
    
    methods
        function self = BasicEphysAnalysisGUI
            figureWidth = 800;
            figureHeight = 500;
            self.Figure = figure('Position',[100 100 figureWidth figureHeight]);
            
            % TODO : why doesn't Matlab have decent automatic layout
            % options?  like a fucking grid layout or something jesus fuck
            self.DataAxis = subplot('Position',[245/figureWidth 50/figureHeight 540/figureWidth 400/figureHeight]);
            
            uicontrol(self.Figure,                                  ...
                'Style',    'popupmenu',                            ...
                'String',   BasicEphysAnalysisGUI.DataOptions,      ...
                'Units',    'normalized',                           ...
                'Tag',      'dataselectionpopupmenu',               ...
                'Position', [245/figureWidth 460/figureHeight 540/figureWidth 25/figureHeight],       ...
                'Callback', @(varargin) self.refreshData()          ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'pushbutton',                           ...
                'String',   'Choose Files...',                      ...
                'Units',    'normalized',                           ...
                'Position', [10/figureWidth 465/figureHeight 85/figureWidth 25/figureHeight],        ...
                'Callback', @(varargin) self.loadFiles()            ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'pushbutton',                           ...
                'String',   'Choose Traces...',                      ...
                'Units',    'normalized',                           ...
                'Position', [100/figureWidth 465/figureHeight 85/figureWidth 25/figureHeight],        ...
                'Callback', @(varargin) self.openChooseTracesDialog()            ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'pushbutton',                           ...
                'String',   'Save Data...',                         ...
                'Units',    'normalized',                           ...
                'Position', [10/figureWidth 435/figureHeight 85/figureWidth 25/figureHeight],        ...
                'Callback', @(varargin) self.saveData()            ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'pushbutton',                           ...
                'String',   'Save Figure...',                       ...
                'Units',    'normalized',                           ...
                'Position', [100/figureWidth 435/figureHeight 85/figureWidth 25/figureHeight],        ...
                'Callback', @(varargin) self.saveFigure()            ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'text',                                 ...
                'String',   'Preprocessing:',                       ...
                'Units',    'normalized',                           ...
                'Position', [10/figureWidth 410/figureHeight 120/figureWidth 25/figureHeight],        ...
                'HorizontalAlignment',  'left'                      ...
                );
            
            uibuttongroup(self.Figure,'Position',[10/figureWidth 270/figureHeight 175/figureWidth 150/figureHeight]);
            
            uicontrol(self.Figure,                                  ...
                'Style',    'checkbox',                             ...
                'String',   'Baseline Subtract',                    ...
                'Units',    'normalized',                           ...
                'Tag',      'baselinesubtractcheckbox',             ...
                'Position', [15/figureWidth 400/figureHeight 110/figureWidth 15/figureHeight],        ...
                'Callback', @(varargin) self.updatePreprocessing()  ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'text',                                 ...
                'String',   'Start (s):',                           ...
                'Units',    'normalized',                           ...
                'Position', [15/figureWidth 380/figureHeight 60/figureWidth 15/figureHeight],         ...
                'HorizontalAlignment',  'left'                      ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'edit',                                 ...
                'String',   '0',                                    ...
                'Units',    'normalized',                           ...
                'Tag',      'baselinestarteditbox',                 ...
                'Position', [60/figureWidth 380/figureHeight 30/figureWidth 15/figureHeight],         ...
                'Callback', @(varargin) self.updatePreprocessing()  ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'text',                                 ...
                'String',   'Length (s):',                          ...
                'Units',    'normalized',                           ...
                'Position', [90/figureWidth 380/figureHeight 60/figureWidth 15/figureHeight],         ...
                'HorizontalAlignment',  'left'                      ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'edit',                                 ...
                'String',   '0.1',                                  ...
                'Units',    'normalized',                           ...
                'Tag',      'baselinelengtheditbox',                ...
                'Position', [145/figureWidth 380/figureHeight 30/figureWidth 15/figureHeight],        ...
                'Callback', @(varargin) self.updatePreprocessing()  ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'checkbox',                             ...
                'String',   'Filter Before Averaging:',             ...
                'Units',    'normalized',                           ...
                'Tag',      'prefiltercheckbox',                    ...
                'Position', [15/figureWidth 360/figureHeight 150/figureWidth 15/figureHeight],        ...
                'Callback', @(varargin) self.updatePreprocessing()  ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'popupmenu',                            ...
                'String',   {                                       ...
                    'Mean',                                         ...
                    'Median'                                        ...
                    },                                              ...
                'Units',    'normalized',                           ...
                'Tag',      'prefilterpopupmenu',                   ...
                'Position', [15/figureWidth 330/figureHeight 75/figureWidth 25/figureHeight],         ...
                'Callback', @(varargin) self.updatePreprocessing()  ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'text',                                 ...
                'String',   'Length:',                              ...
                'Units',    'normalized',                           ...
                'Position', [95/figureWidth 335/figureHeight 50/figureWidth 15/figureHeight],         ...
                'HorizontalAlignment',  'left'                      ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'edit',                                 ...
                'String',   '3',                                    ...
                'Units',    'normalized',                           ...
                'Tag',      'prefiltereditbox',                     ...
                'Position', [140/figureWidth 335/figureHeight 40/figureWidth 15/figureHeight],        ...
                'Callback', @(varargin) self.updatePreprocessing()  ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'checkbox',                             ...
                'String',   'Filter After Averaging:',              ...
                'Units',    'normalized',                           ...
                'Tag',      'postfiltercheckbox',                   ...
                'Position', [15/figureWidth 315/figureHeight 150/figureWidth 15/figureHeight],        ...
                'Callback', @(varargin) self.updatePreprocessing()  ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'popupmenu',                            ...
                'String',   {                                       ...
                    'Mean',                                         ...
                    'Median'                                        ...
                    },                                              ...
                'Units',    'normalized',                           ...
                'Tag',      'postfilterpopupmenu',            ...
                'Position', [15/figureWidth 285/figureHeight 75/figureWidth 25/figureHeight],         ...
                'Callback', @(varargin) self.updatePreprocessing()  ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'text',                                 ...
                'String',   'Length:',                              ...
                'Units',    'normalized',                           ...
                'Position', [95/figureWidth 290/figureHeight 50/figureWidth 15/figureHeight],         ...
                'HorizontalAlignment',  'left'                      ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'edit',                                 ...
                'String',   '3',                                    ...
                'Units',    'normalized',                           ...
                'Tag',      'postfiltereditbox',                    ...
                'Position', [140/figureWidth 290/figureHeight 40/figureWidth 15/figureHeight],        ...
                'Callback', @(varargin) self.updatePreprocessing()  ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'text',                                 ...
                'String',   'Cell Parameters Calculation:',       ...
                'Units',    'normalized',                           ...
                'Position', [10/figureWidth 240/figureHeight 180/figureWidth 25/figureHeight],        ...
                'HorizontalAlignment',  'left'                      ...
                );
            
            uibuttongroup(self.Figure,'Position',[10/figureWidth 150/figureHeight 175/figureWidth 100/figureHeight]);
            
            uicontrol(self.Figure,                                  ...
                'Style',    'text',                                 ...
                'String',   'Using:',                               ...
                'Units',    'normalized',                           ...
                'Position', [15/figureWidth 225/figureHeight 35/figureWidth 15/figureHeight],         ...
                'HorizontalAlignment',  'left'                      ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'popupmenu',                            ...
                'String',   BasicEphysAnalysisGUI.DataOptions(1:6), ...
                'Units',    'normalized',                           ...
                'Tag',      'rsdatasourcepopupmenu',                ...
                'Position', [50/figureWidth 230/figureHeight 130/figureWidth 15/figureHeight],        ...
                'Callback', @(varargin) self.updateCellParametersCalculation()  ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'text',                                 ...
                'String',   'Voltage Step (V):',                    ...
                'Units',    'normalized',                           ...
                'Position', [15/figureWidth 200/figureHeight 100/figureWidth 15/figureHeight],        ...
                'HorizontalAlignment',  'left'                      ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'edit',                                 ...
                'String',   '-5',                                   ...
                'Units',    'normalized',                           ...
                'Tag',      'voltagestepeditbox',                   ...
                'Position', [110/figureWidth 200/figureHeight 30/figureWidth 15/figureHeight],        ...
                'Callback', @(varargin) self.updateCellParametersCalculation()  ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'text',                                 ...
                'String',   'Resp Start (s):',                      ...
                'Units',    'normalized',                           ...
                'Position', [15/figureWidth 175/figureHeight 90/figureWidth 15/figureHeight],         ...
                'HorizontalAlignment',  'left'                      ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'edit',                                 ...
                'String',   '0',                                    ...
                'Units',    'normalized',                           ...
                'Tag',      'rsstarteditbox',                       ...
                'Position', [90/figureWidth 175/figureHeight 20/figureWidth 15/figureHeight],         ...
                'Callback', @(varargin) self.updateCellParametersCalculation()  ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'text',                                 ...
                'String',   'Length (s):',                          ...
                'Units',    'normalized',                           ...
                'Position', [110/figureWidth 175/figureHeight 60/figureWidth 15/figureHeight],         ...
                'HorizontalAlignment',  'left'                      ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'edit',                                 ...
                'String',   '0.1',                                  ...
                'Units',    'normalized',                           ...
                'Tag',      'rslengtheditbox',                      ...
                'Position', [165/figureWidth 175/figureHeight 20/figureWidth 15/figureHeight],        ...
                'Callback', @(varargin) self.updateCellParametersCalculation()  ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'text',                                 ...
                'String',   'SS Start (s):',                        ...
                'Units',    'normalized',                           ...
                'Position', [15/figureWidth 155/figureHeight 90/figureWidth 15/figureHeight],         ...
                'HorizontalAlignment',  'left'                      ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'edit',                                 ...
                'String',   '0',                                    ...
                'Units',    'normalized',                           ...
                'Tag',      'ssstarteditbox',                       ...
                'Position', [90/figureWidth 155/figureHeight 20/figureWidth 15/figureHeight],         ...
                'Callback', @(varargin) self.updateCellParametersCalculation()  ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'text',                                 ...
                'String',   'Length (s):',                          ...
                'Units',    'normalized',                           ...
                'Position', [110/figureWidth 155/figureHeight 60/figureWidth 15/figureHeight],         ...
                'HorizontalAlignment',  'left'                      ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'edit',                                 ...
                'String',   '0.1',                                  ...
                'Units',    'normalized',                           ...
                'Tag',      'sslengtheditbox',                      ...
                'Position', [165/figureWidth 155/figureHeight 20/figureWidth 15/figureHeight],        ...
                'Callback', @(varargin) self.updateCellParametersCalculation()  ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'text',                                 ...
                'String',   'Temporal Parameters Calculation:',     ...
                'Units',    'normalized',                           ...
                'Position', [10/figureWidth 120/figureHeight 180/figureWidth 25/figureHeight],        ...
                'HorizontalAlignment',  'left'                      ...
                );
            
            uibuttongroup(self.Figure,'Position',[10/figureWidth 75/figureHeight 175/figureWidth 55/figureHeight]);
            
            uicontrol(self.Figure,                                  ...
                'Style',    'text',                                 ...
                'String',   'Using:',                               ...
                'Units',    'normalized',                           ...
                'Position', [15/figureWidth 105/figureHeight 35/figureWidth 15/figureHeight],         ...
                'HorizontalAlignment',  'left'                      ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'popupmenu',                            ...
                'String',   BasicEphysAnalysisGUI.DataOptions(1:6), ...
                'Units',    'normalized',                           ...
                'Tag',      'tpdatasourcepopupmenu',                ...
                'Position', [50/figureWidth 110/figureHeight 130/figureWidth 15/figureHeight],        ...
                'Callback', @(varargin) self.updateTPCalculation()  ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'text',                                 ...
                'String',   'Start (s):',                           ...
                'Units',    'normalized',                           ...
                'Position', [15/figureWidth 80/figureHeight 60/figureWidth 15/figureHeight],         ...
                'HorizontalAlignment',  'left'                      ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'edit',                                 ...
                'String',   '0',                                    ...
                'Units',    'normalized',                           ...
                'Tag',      'tpstarteditbox',                       ...
                'Position', [60/figureWidth 80/figureHeight 30/figureWidth 15/figureHeight],         ...
                'Callback', @(varargin) self.updateTPCalculation()  ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'text',                                 ...
                'String',   'Length (s):',                          ...
                'Units',    'normalized',                           ...
                'Position', [90/figureWidth 80/figureHeight 60/figureWidth 15/figureHeight],         ...
                'HorizontalAlignment',  'left'                      ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'edit',                                 ...
                'String',   '0.1',                                  ...
                'Units',    'normalized',                           ...
                'Tag',      'tplengtheditbox',                      ...
                'Position', [145/figureWidth 80/figureHeight 30/figureWidth 15/figureHeight],        ...
                'Callback', @(varargin) self.updateTPCalculation()  ...
                );
            
            uicontrol(self.Figure,                                  ...
                'Style',    'text',                                 ...
                'String',   'Recording Mode:',                      ...
                'Units',    'normalized',                           ...
                'Position', [10/figureWidth 45/figureHeight 180/figureWidth 25/figureHeight],         ...
                'HorizontalAlignment',  'left'                      ...
                );
            
            recordModeButtonGroup = uibuttongroup(self.Figure,      ...
                'Position', [10/figureWidth 20/figureHeight 175/figureWidth 35/figureHeight],         ...
                'SelectionChangedFcn',  @(~,eventData,varargin) self.updateRecordingMode(eventData)  ...
                );
            
            uicontrol(recordModeButtonGroup,                        ...
                'Style',    'radiobutton',                          ...
                'String',   'IC',                                   ...
                'Tag',      'currentclampradiobutton',              ...
                'Units',    'normalized',                           ...
                'Position', [5/175 5/35 75/175 25/35],              ...
                'HorizontalAlignment',  'left'                      ...
                );
            
            uicontrol(recordModeButtonGroup,                        ...
                'Style',    'radiobutton',                          ...
                'String',   'VC',                                   ...
                'Units',    'normalized',                           ...
                'Position', [95/175 5/35 75/175 25/35],             ...
                'HorizontalAlignment',  'left'                      ...
                );
            
%             uipanel(self.Figure,               ...
%                 'BackgroundColor',  'w',                            ...
%                 'Tag',      'filelistouterpanel',                   ...
%                 'Position', [800/figureWidth 10/figureHeight 190/figureWidth 480/figureHeight]);
%             
%             uipanel(self.Figure,               ...
%                 'BackgroundColor',  'w',                            ...
%                 'BorderType',       'none',                         ...
%                 'Tag',      'filelistinnerpanel',                   ...
%                 'Position', [830/figureWidth 22/figureHeight 158/figureWidth 464/figureHeight]);
%             
%             uicontrol(recordModeButtonGroup,                        ...
%                 'Style',    'slider',                               ...
%                 'Value',    0,                                      ...
%                 'Units',    'normalized',                           ...
%                 'Position', [800/figureWidth 5/35 75/175 25/35]             ...
%                 );
        end
        
        function delete(self)
            delete(self.Figure)
        end
        
        function chooseTraces(self,fig)
            boxes = self.getTraceChoiceCheckBoxes(fig);
            
            if numel(boxes) == 1
                selectedIndices = find(get(boxes,'Value'));
            else
                % TODO : is flipud always right?  better to pull the index out
                % of the tag
                selectedIndices = find(flipud(cell2mat(get(boxes,'Value'))));
            end
            
            firstTag = get(boxes(1),'Tag');
            
            if firstTag(1) == 't'
                self.SelectedTraceIndices = selectedIndices;
            else
                if firstTag(1) == 'c'
                    colIndices = repmat((1:size(self.AllTraces,2))',numel(selectedIndices),1);
                    pagIndices = kron(selectedIndices,ones(size(self.AllTraces,2),1));
                elseif firstTag(1) == 's'
                    colIndices = repmat(selectedIndices,size(self.AllTraces,3),1);
                    pagIndices = kron((1:size(self.AllTraces,3))',ones(numel(selectedIndices),1));
                else
                    errordlg('This should never happen');
                    return
                end
                
                if isempty(colIndices) || isempty(pagIndices)
                    self.SelectedTraceIndices = [];
                else
                    self.SelectedTraceIndices = sub2ind([size(self.AllTraces,2) size(self.AllTraces,3)],colIndices,pagIndices);
                end
            end
            
            self.SelectedTraces = self.AllTraces(:,self.SelectedTraceIndices);
            self.SelectedTraceNames = self.TraceNames(1,self.SelectedTraceIndices);
            
            close(fig)
            
            self.updatePreprocessing();
        end
        
        function loadFiles(self)
            [filenames,pathname] = uigetfile('*.xsg;*.h5','MultiSelect','on'); % TODO : will we ever want to combine files from multiple folders?  Might make sense to switch to uipickfiles
    
            if isnumeric(filenames)
                return
            end

            if ischar(filenames)
                filenames = {filenames};
            end
            
            self.Filenames = cellfun(@(s) sprintf('%s%s',pathname,s),filenames,'UniformOutput',false);
    
            [self.AllTraces,self.SampleRate,self.TraceNames] = concatenateTraces(self.Filenames);
            
            self.SelectedTraceIndices = 1:(size(self.AllTraces,2)*size(self.AllTraces,3));
            
            self.SelectedTraces = self.AllTraces(:,self.SelectedTraceIndices);
            
            self.SelectedTraceNames = self.TraceNames(self.SelectedTraceIndices);
            
            for ii = 1:numel(self.TraceNames)
                disp(self.TraceNames{ii});
            end
            
            self.updatePreprocessing();
        end
        
        function openChooseTracesDialog(self)
            if ~iscell(self.TraceNames)
                warndlg('No traces to choose from.  Try loading some files first.');
                return
            end
            
            [~,longestStringIndex] = max(cellfun(@numel,self.TraceNames));
            
            longestString = self.TraceNames(longestStringIndex);
            
            fig = figure('Visible','off');
            h = uicontrol('Style','text','String',longestString,'Visible','off');
            longestStringPixels = get(h,'Extent');
            longestStringPixels = longestStringPixels(3);
            close(fig);
            
            figureWidth = max(20+10*4+100*3,20+50+20+longestStringPixels);
            figureHeight = 20+50+10+5+30*max([numel(self.TraceNames) size(self.AllTraces,2) size(self.AllTraces,3)])+30;
            
            chooseTracesFigure = figure('Units','pixels','Position',[100 100 figureWidth figureHeight]);
            
            % TODO : this is a quick fix to make the choose trace dialog
            % semi-useable when there are lots of sweeps.  really it would
            % be better to implement a scrollbar and/or use inputdlg to
            % allow them to choose traces by array indexing
            drawnow;
            
            oldFigureHeight = figureHeight;
            
            figurePosition = get(chooseTracesFigure,'Position');
            figureHeight = figurePosition(4);
            
            isChoiceByChannelOnly = oldFigureHeight ~= figureHeight;
            
            if isChoiceByChannelOnly
                warndlg('Too many traces!  You can only choose traces by channel until John figures out how to implement scrollbars in Matlab...');
                
                enable = 'off';
                
                figureHeight = 20+50+10+5+30*size(self.AllTraces,3)+30;
                
                figurePosition(4) = figureHeight;
                
                set(chooseTracesFigure,'Position',figurePosition);
            else
                enable = 'on';
            end
            
            choiceModeButtonGroup = uibuttongroup(chooseTracesFigure,           ...
                'Units',                'pixels',                               ...
                'Position',             [10 figureHeight-60 figureWidth-20 50]  ...
                );
            
            uicontrol(choiceModeButtonGroup,...
                'Style',                'text',                          ...
                'Units',                'pixels',                               ...
                'Position',             [5 30 200 15],             ...
                'HorizontalAlignment',  'left',                     ...
                'String',               'Choose Traces By:'                        ...
                );
            
            uicontrol(choiceModeButtonGroup,...
                'Enable',               enable,                     ...
                'Style',                'radiobutton',                          ...
                'Units',                'pixels',                               ...
                'Position',             [10 5 100 25],             ...
                'String',               'Trace Name',                        ...
                'Value',                ~isChoiceByChannelOnly,             ...
                'Callback',             @(varargin) self.createAllTracesChoicePanel(chooseTracesFigure)   ...
                );
            
            uicontrol(choiceModeButtonGroup,...
                'Enable',               enable,                     ...
                'Style',                'radiobutton',                          ...
                'Units',                'pixels',                               ...
                'Position',             [120 5 100 25],            ...
                'String',               'Sweep Number',                      ...
                'Value',                false,                      ...
                'Callback',             @(varargin) self.createSweepsChoicePanel(chooseTracesFigure)   ...
                );
            
            uicontrol(choiceModeButtonGroup,...
                'Enable',               'on',               ...
                'Style',                'radiobutton',                          ...
                'Units',                'pixels',                               ...
                'Position',             [230 5 100 25],            ...
                'String',               'Channel Name',                           ...
                'Value',                isChoiceByChannelOnly,      ...
                'Callback',             @(varargin) self.createChannelsChoicePanel(chooseTracesFigure)   ...
                );
            
            uibuttongroup(chooseTracesFigure,'Units','pixels','Position',[10 40 figureWidth-20 figureHeight-110]);
            
            if isChoiceByChannelOnly
                self.createChannelsChoicePanel(chooseTracesFigure);
            else
                self.createAllTracesChoicePanel(chooseTracesFigure);
            end
            
            uicontrol(chooseTracesFigure,...
                'Style',                'pushbutton',                           ...
                'Units',                'pixels',                               ...
                'Position',             [figureWidth-60 10 50 25],              ...
                'String',               'OK',                                   ...
                'Callback',             @(varargin) self.chooseTraces(chooseTracesFigure)   ...
                );
        end
        
        function boxes = getTraceChoiceCheckBoxes(~,fig)
            boxes = findobj(fig,'-regexp','Tag','(trace|sweep|channel)[0-9]+checkbox');
        end
            
        function createAllTracesChoicePanel(self,fig)
            delete(self.getTraceChoiceCheckBoxes(fig));
            
            figurePosition = get(fig,'Position');
            figureWidth = figurePosition(3);
            figureHeight = figurePosition(4);
            
            for ii = 1:numel(self.TraceNames)
                uicontrol(fig,...
                    'Style',            'checkbox',                                     ...
                    'Units',            'pixels',                                       ...
                    'Position',         [20 figureHeight-70-30*ii figureWidth-40 25],   ...
                    'String',           self.TraceNames{ii},                            ...
                    'Tag',              sprintf('trace%dcheckbox',ii),                  ...
                    'Value',            ismember(self.TraceNames{1,ii},self.SelectedTraceNames)                                               ...
                    );
            end
        end
        
        function createSweepsChoicePanel(self,fig)
            delete(self.getTraceChoiceCheckBoxes(fig));
            
            figurePosition = get(fig,'Position');
            figureWidth = figurePosition(3);
            figureHeight = figurePosition(4);
            
            for ii = 1:size(self.TraceNames,2)
                traceName = self.TraceNames{1,ii,1};
                
                sweepName = regexp(traceName,'(sweep [0-9]+)','tokens');
                
                uicontrol(fig,...
                    'Style',            'checkbox',                                     ...
                    'Units',            'pixels',                                       ...
                    'Position',         [20 figureHeight-70-30*ii figureWidth-40 25],   ...
                    'String',           sweepName{1}{1},                                ...
                    'Tag',              sprintf('sweep%dcheckbox',ii),                  ...
                    'Value',            all(ismember(self.TraceNames(1,ii,:),self.SelectedTraceNames))                                               ...
                    );
            end
        end
        
        function createChannelsChoicePanel(self,fig)
            delete(self.getTraceChoiceCheckBoxes(fig));
            
            figurePosition = get(fig,'Position');
            figureWidth = figurePosition(3);
            figureHeight = figurePosition(4);
            
            for ii = 1:size(self.TraceNames,3)
                traceName = self.TraceNames{1,1,ii};
                
                sweepName = regexp(traceName,'channel (.+)','tokens');
                
                uicontrol(fig,...
                    'Style',            'checkbox',                                     ...
                    'Units',            'pixels',                                       ...
                    'Position',         [20 figureHeight-70-30*ii figureWidth-40 25],   ...
                    'String',           sweepName{1}{1},                                ...
                    'Tag',              sprintf('channel%dcheckbox',ii),                  ...
                    'Value',            all(ismember(self.TraceNames(1,:,ii),self.SelectedTraceNames))                                               ...
                    );
            end
        end
        
        function refreshData(self)
            selection = get(findobj(self.Figure,'Tag','dataselectionpopupmenu'),'Value');
            
            data = self.selectData(selection);
            
            cla(self.DataAxis);
            set(self.DataAxis,'XLimMode','auto');
               
            if selection < 7
                plotTraces(self.DataAxis,data,self.SampleRate,'RecordingMode',self.RecordingMode);
                return
            elseif selection < 12
                plotParams(self.DataAxis,data);
                
                switch selection
                    case 7
                        ylabel(self.DataAxis,'Series Resistance (M{\Omega})');
                    case 8
                        ylabel(self.DataAxis,'Input Resistance (M{\Omega})');
                    case 9
                        ylabel(self.DataAxis,'Membrane Time Constant (s)');
                    case 10
                        ylabel(self.DataAxis,'Membrane Capacitance (pF)');
                    case 11
                        ylabel(self.DataAxis,'Charge Transferred (pC)');
                end
                        
                return
            end
            
            % if we get here, selection == 12, i.e. show temporal parameters
            time = (1:size(data,1))/self.SampleRate;
            
            plotTraces(self.DataAxis,data,self.SampleRate,'RecordingMode',self.RecordingMode);
            
            hold(self.DataAxis,'on');
            
            start = str2double(get(findobj(self.Figure,'Tag','tpstarteditbox'),'String'));
            
            latencyHandles = line(repmat(self.Latencies+start,2,1),repmat(ylim',1,numel(self.Latencies)),'Color','k','LineStyle','-');
            peakTimeHandles = plot(time(self.PeakIndices),data(self.PeakIndices),'Color','r','LineStyle','none','Marker','o');
            riseTimeHandles = plot(time([self.Peak10IndexRising;self.Peak90IndexRising]),data([self.Peak10IndexRising;self.Peak90IndexRising]),'Color','k','LineStyle','--','Marker','o');
            fallTimeHandles = plot(time([self.Peak10IndexFalling;self.Peak90IndexFalling]),data([self.Peak10IndexFalling;self.Peak90IndexFalling]),'Color','k','LineStyle','-.','Marker','o');
            halfWidthHandles = plot(time([self.Peak50IndexRising;self.Peak50IndexFalling]),data([self.Peak50IndexRising;self.Peak50IndexFalling]),'Color','k','LineStyle',':','Marker','o');
            
            legend(self.DataAxis,[peakTimeHandles(1);latencyHandles(1);riseTimeHandles(1);fallTimeHandles(1);halfWidthHandles(1)],{'Peak' 'Latency' 'Rise Time' 'Fall Time' 'Half Width'},'Location','NorthEast');
        
            window = str2double(get(findobj(self.Figure,'Tag','tplengtheditbox'),'String')); 
            
            xlim(self.DataAxis,[start start+max(window,1/self.SampleRate)]);
        end
        
        function saveData(self)
            mc = metaclass(self);
            
            fields = mc.PropertyList;
            
            fieldsToSave = {fields(strcmpi('public',{fields.SetAccess}) & ~[fields.Constant] & ~[fields.Hidden]).Name};
            
            structToSave = struct([]);
            
            for ii = 1:numel(fieldsToSave)
                structToSave(1).(fieldsToSave{ii}) = self.(fieldsToSave{ii});
            end
            
            [saveFile,savePath] = uiputfile('*.mat');
            
            if ~ischar(saveFile)
                return
            end
            
            save([savePath saveFile],'-struct','structToSave');
        end
        
        function saveFigure(self)
            fig = figure;
            ax = axes(fig);
            pos = get(ax,'Position');
            delete(ax);
            
            ax = copyobj(self.DataAxis,fig);
            
            set(ax,'Position',pos);
            
            [saveFile,savePath] = uiputfile({'*.fig' '*.bmp' '*.emf' '*.eps' '*.hdf' '*.pbm' '*.pcx' '*.pdf' '*.pgm' '*.png' '*.ps' '*.svg' '*.tif'}');
            
            if ~ischar(saveFile)
                return
            end
            
            saveas(ax,[savePath saveFile]);
            
            close(fig);
        end
        
        function data = selectData(self,selection)
            switch selection
                case 1
                    data = self.SelectedTraces;
                case 2
                    data = self.BaselineSubtractedTraces;
                case 3
                    data = self.AverageTrace;
                case 4
                    data = self.FilteredTraces;
                case 5
                    data = self.AverageFilteredTrace;
                case 6
                    data = self.FilteredAverageTrace;
                case 7
                    data = self.SeriesResistance;
                case 8
                    data = self.InputResistance;
                case 9
                    data = self.MembraneTimeConstant;
                case 10
                    data = self.MembraneCapacitance;
                case 11
                    data = self.ChargeTransferred;
                case 12
                    data = self.selectData(get(findobj(self.Figure,'Tag','tpdatasourcepopupmenu'),'Value')); % LOLrecursion
            end
        end
        
        function updatePreprocessing(self)
            isBaselineSubtract = logical(get(findobj(self.Figure,'Tag','baselinesubtractcheckbox'),'Value'));
            
            if isBaselineSubtract
                % TODO : input checking
                baselineStart = str2double(get(findobj(self.Figure,'Tag','baselinestarteditbox'),'String'));
                baselineWindow = str2double(get(findobj(self.Figure,'Tag','baselinelengtheditbox'),'String')); 
            else
                baselineStart = 0;
                baselineWindow = 0;
            end
            
            preFilterCheckBox = findobj(self.Figure,'Tag','prefiltercheckbox');
            preFilterPopupMenu = findobj(self.Figure,'Tag','prefilterpopupmenu');
            preFilterEditBox = findobj(self.Figure,'Tag','prefiltereditbox');
            
            isPreFilter = logical(get(preFilterCheckBox,'Value'));
            
            if isPreFilter
                set([preFilterPopupMenu; preFilterEditBox],'Enable','on');
                
                switch get(preFilterPopupMenu,'Value')
                    case 1
                        preFilterFun = @mean;
                    case 2
                        preFilterFun = @median;
                end
                
                preFilterLength = round(str2double(get(preFilterEditBox,'String')));
            else
                set([preFilterPopupMenu; preFilterEditBox],'Enable','off');
                
                preFilterFun = @(x) x;
                preFilterLength = 1;
            end
            
            postFilterCheckBox = findobj(self.Figure,'Tag','postfiltercheckbox');
            postFilterPopupMenu = findobj(self.Figure,'Tag','postfilterpopupmenu');
            postFilterEditBox = findobj(self.Figure,'Tag','postfiltereditbox');
            
            isPostFilter = logical(get(postFilterCheckBox,'Value'));
            
            if isPostFilter
                set([postFilterPopupMenu; postFilterEditBox],'Enable','on');
                
                switch get(postFilterPopupMenu,'Value')
                    case 1
                        postFilterFun = @mean;
                    case 2
                        postFilterFun = @median;
                end
                
                postFilterLength = round(str2double(get(postFilterEditBox,'String')));
            else
                set([postFilterPopupMenu; postFilterEditBox],'Enable','off');
                
                postFilterFun = @(x) x;
                postFilterLength = 1;
            end
            
            [self.FilteredAverageTrace,self.AverageFilteredTrace,self.FilteredTraces,self.AverageTrace,self.BaselineSubtractedTraces,self.Baseline] = preprocess(self.SelectedTraces,self.SampleRate,'Start',baselineStart,'Window',baselineWindow,'PreFilter',isPreFilter,'PreFilterFun',preFilterFun,'PreFilterLength',preFilterLength,'PostFilter',isPostFilter,'PostFilterFun',postFilterFun,'PostFilterLength',postFilterLength);
            
            % TODO : an event driven model would make much more sense for
            % this
            self.updateCellParametersCalculation();
            self.updateTPCalculation();
            
            self.refreshData();
        end
        
        function updateRecordingMode(self,eventData)
            self.RecordingMode = eventData.NewValue.String;
            
            self.refreshData();
        end
        
        function updateCellParametersCalculation(self)
            responseStart = str2double(get(findobj(self.Figure,'Tag','rsstarteditbox'),'String'));
            responseLength = str2double(get(findobj(self.Figure,'Tag','rslengtheditbox'),'String')); 
            steadyStateStart = str2double(get(findobj(self.Figure,'Tag','ssstarteditbox'),'String'));
            steadyStateLength = str2double(get(findobj(self.Figure,'Tag','sslengtheditbox'),'String')); 
            voltageStep = str2double(get(findobj(self.Figure,'Tag','voltagestepeditbox'),'String')); 
            
            data = self.selectData(get(findobj(self.Figure,'Tag','rsdatasourcepopupmenu'),'Value'));
            
            [self.SeriesResistance,self.InputResistance,self.MembraneTimeConstant,self.MembraneCapacitance,self.SteadyStateCurrent] = calculateCellParameters(data,voltageStep,self.SampleRate,'ResponseStart',responseStart,'ResponseLength',responseLength,'SteadyStateStart',steadyStateStart,'SteadyStateLength',steadyStateLength);
            self.ChargeTransferred = calculateAUC(data,self.SampleRate,'WindowStart',responseStart,'WindowLength',steadyStateStart+steadyStateLength-responseLength,'Baseline',self.SteadyStateCurrent);
            
            self.refreshData();
        end
        
        function updateTPCalculation(self)
            start = str2double(get(findobj(self.Figure,'Tag','tpstarteditbox'),'String'));
            window = str2double(get(findobj(self.Figure,'Tag','tplengtheditbox'),'String')); 
            
            data = self.selectData(get(findobj(self.Figure,'Tag','tpdatasourcepopupmenu'),'Value'));
            
            [self.Peaks,self.PeakIndices,self.Latencies,self.RiseTimes,self.FallTimes,self.HalfWidths,self.Peak10IndexRising,self.Peak90IndexRising,self.Peak90IndexFalling,self.Peak10IndexFalling,self.Peak50IndexRising,self.Peak50IndexFalling] = calculateTemporalParameters(data,self.SampleRate,'Start',start,'Window',window);
            
            self.refreshData();
        end
    end
end